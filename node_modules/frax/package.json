{
  "name": "frax",
  "version": "0.0.2",
  "description": "Frame extractor from data stream.",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/enobufs/frax.git"
  },
  "devDependencies": {
    "mocha": "~1.20.1"
  },
  "keywords": [
    "Framing",
    "TCP",
    "Multiplex"
  ],
  "author": {
    "name": "enobufs"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/enobufs/frax/issues"
  },
  "homepage": "https://github.com/enobufs/frax",
  "readme": "# frax\n\nFrame extractor from data stream (e.g. TCP).\n\n## Installation\n    $ npm install frax\n\n## Features\n* Extracts frames delimited by frame header (frame length)\n* Supports various frame header lengths (1, 2, 4 bytes)\n* Frame header length 2 is equivalent to RFC 4571.\n\n```text\n+--+-------------+--+-------------+--+-------------+\n|FH|   Frame 1   |FH|   Frame 2   |FH|   Frame 3   | ...\n+--+-------------+--+-------------+--+-------------+\nFH: Frame header contains frame length in bytes (big-endian)\n    The length does not include the frame header itself.\nFrame: Application data.\n```\n\n## API\n\n### Module method\n* create([headerLen])\nCreates an instance of frax. The `headerLen` should either be 1, 2 or 4, or defaults to 2 otherwise.\n\n### Instance method\n* frax.input(buf) -\nInput stream data. The `buf` is of type Buffer.\n* frax.headerSize (getter) -\nReturns frame header size used by the instance.\n* frax.reset() -\nReset the internal state. Probably useless expect for test purposes.\n* Event: 'data' -\nEmitted when a complete frame is ready. The argument `buf` will be a Buffer.\n\n## Example\n\n```js\nvar frax = require('frax').create();\n\n// Set up data event handler\nfrax.on('data', function (frame) {\n    console.log('%d bytes of frame received', frame.length);\n});\n\n// Pass incoming data into frax directly.\nsoc.on('data', function (buf) {\n    frax.input(buf);\n});\n\n```\n",
  "readmeFilename": "README.md",
  "_id": "frax@0.0.2",
  "dist": {
    "shasum": "05095cea601e70b377eb341111b2997fcb58c4d5"
  },
  "_from": "frax@",
  "_resolved": "https://registry.npmjs.org/frax/-/frax-0.0.2.tgz"
}
